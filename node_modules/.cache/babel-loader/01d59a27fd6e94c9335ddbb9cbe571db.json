{"ast":null,"code":"var _jsxFileName = \"/home/dev/projects/youtube-test/youtube-player/src/pages/video/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport classes from './index.module.scss';\nimport YouTube from 'react-youtube';\nimport Context from '../../contex/indext';\nimport { useNavigate } from 'react-router-dom';\nimport { RouteNames } from '../../routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst opts = {\n  height: '390',\n  width: '640',\n  playerVars: {\n    autoplay: 1,\n    iv_load_policy: 3,\n    start: 1\n  }\n};\n\nconst VideoPage = () => {\n  _s();\n\n  var _data$video12, _data$video12$videoOp, _data$video13, _data$video13$videoOp, _data$video13$videoOp2, _data$video13$videoOp3;\n\n  const data = useContext(Context);\n  const [options, setOptions] = useState(opts);\n  const [intervalL, setIntervalL] = useState(null);\n  const navigate = useNavigate();\n\n  const _onReady = _event => {\n    var _data$video, _data$video$videoOpti, _data$video2, _data$video2$videoOpt, _data$video3, _data$video3$videoOpt, _data$video4, _data$video4$videoOpt, _data$video5, _data$video5$videoOpt, _data$video6, _data$video6$videoOpt;\n\n    data.video.setVideoOptionPlay(true);\n\n    if (!((_data$video = data.video) !== null && _data$video !== void 0 && (_data$video$videoOpti = _data$video.videoOption) !== null && _data$video$videoOpti !== void 0 && _data$video$videoOpti.startTime) || ((_data$video2 = data.video) === null || _data$video2 === void 0 ? void 0 : (_data$video2$videoOpt = _data$video2.videoOption) === null || _data$video2$videoOpt === void 0 ? void 0 : _data$video2$videoOpt.url) !== ((_data$video3 = data.video) === null || _data$video3 === void 0 ? void 0 : (_data$video3$videoOpt = _data$video3.videoOption) === null || _data$video3$videoOpt === void 0 ? void 0 : _data$video3$videoOpt.old)) {\n      data.video.setVideoOption('startTime', Date.now());\n    }\n\n    if (((_data$video4 = data.video) === null || _data$video4 === void 0 ? void 0 : (_data$video4$videoOpt = _data$video4.videoOption) === null || _data$video4$videoOpt === void 0 ? void 0 : _data$video4$videoOpt.url) === ((_data$video5 = data.video) === null || _data$video5 === void 0 ? void 0 : (_data$video5$videoOpt = _data$video5.videoOption) === null || _data$video5$videoOpt === void 0 ? void 0 : _data$video5$videoOpt.old) && (_data$video6 = data.video) !== null && _data$video6 !== void 0 && (_data$video6$videoOpt = _data$video6.videoOption) !== null && _data$video6$videoOpt !== void 0 && _data$video6$videoOpt.time) {\n      var _data$video7, _data$video7$videoOpt;\n\n      const dateTime = (Date.now() - ((_data$video7 = data.video) === null || _data$video7 === void 0 ? void 0 : (_data$video7$videoOpt = _data$video7.videoOption) === null || _data$video7$videoOpt === void 0 ? void 0 : _data$video7$videoOpt.startTime)) / 1000 || 0; // if (data.video?.videoOption?.time > dateTime) {\n      //   dateTime += data.video?.videoOption?.time;\n      // }\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n\n      setOptions(prev => {\n        var _data$video8, _data$video8$videoOpt;\n\n        return { ...prev,\n          playerVars: { ...(prev === null || prev === void 0 ? void 0 : prev.playerVars),\n            start: dateTime || Number((_data$video8 = data.video) === null || _data$video8 === void 0 ? void 0 : (_data$video8$videoOpt = _data$video8.videoOption) === null || _data$video8$videoOpt === void 0 ? void 0 : _data$video8$videoOpt.time) || opts.playerVars.start\n          }\n        };\n      });\n    }\n  };\n\n  const changeInterval = num => {\n    const interval = setInterval(() => {\n      data.video.setVideoOptionTime(num);\n    }, 2000);\n\n    if (intervalL) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      clearInterval(intervalL);\n    }\n\n    setIntervalL(interval);\n  };\n\n  const _onChange = event => {\n    var _data$video9;\n\n    if (event.data === YouTube.PlayerState.PLAYING && !((_data$video9 = data.video) !== null && _data$video9 !== void 0 && _data$video9.videoOption.done)) {\n      changeInterval(Number(event.target.getCurrentTime()));\n      data.video.setVideoOptionDone(false);\n    } else if (intervalL) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      clearInterval(intervalL);\n    }\n\n    data.video.setVideoOptionPlay(event.data === YouTube.PlayerState.PLAYING);\n    data.video.setVideoOptionTime(event.target.getCurrentTime());\n  };\n\n  const btnBack = () => {\n    var _data$video10, _data$video10$videoOp;\n\n    data.video.setVideoOptionOld((_data$video10 = data.video) === null || _data$video10 === void 0 ? void 0 : (_data$video10$videoOp = _data$video10.videoOption) === null || _data$video10$videoOp === void 0 ? void 0 : _data$video10$videoOp.url);\n    navigate(RouteNames.HOME);\n  };\n\n  const btnGif = () => {\n    var _data$video11, _data$video11$videoOp;\n\n    data.video.setVideoOptionOld((_data$video11 = data.video) === null || _data$video11 === void 0 ? void 0 : (_data$video11$videoOp = _data$video11.videoOption) === null || _data$video11$videoOp === void 0 ? void 0 : _data$video11$videoOp.url);\n    navigate(RouteNames.GIF);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.VideoPageWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.options,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${classes.btn} ${classes.btnBack}`,\n        disabled: (_data$video12 = data.video) === null || _data$video12 === void 0 ? void 0 : (_data$video12$videoOp = _data$video12.videoOption) === null || _data$video12$videoOp === void 0 ? void 0 : _data$video12$videoOp.play,\n        onClick: btnBack,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.btn,\n        onClick: btnGif,\n        children: \"GIF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.player,\n      children: /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: `${(_data$video13 = data.video) === null || _data$video13 === void 0 ? void 0 : (_data$video13$videoOp = _data$video13.videoOption) === null || _data$video13$videoOp === void 0 ? void 0 : (_data$video13$videoOp2 = _data$video13$videoOp.url) === null || _data$video13$videoOp2 === void 0 ? void 0 : (_data$video13$videoOp3 = _data$video13$videoOp2.split('v=')[1]) === null || _data$video13$videoOp3 === void 0 ? void 0 : _data$video13$videoOp3.split('&')[0]}`,\n        opts: options,\n        onReady: _onReady,\n        onStateChange: _onChange,\n        onPlaybackQualityChange: _onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n};\n\n_s(VideoPage, \"LpVmnac4C+GthW7yH0Z7G8fD2qY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = VideoPage;\nexport default VideoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPage\");","map":{"version":3,"sources":["/home/dev/projects/youtube-test/youtube-player/src/pages/video/index.tsx"],"names":["React","useContext","useState","classes","YouTube","Context","useNavigate","RouteNames","opts","height","width","playerVars","autoplay","iv_load_policy","start","VideoPage","data","options","setOptions","intervalL","setIntervalL","navigate","_onReady","_event","video","setVideoOptionPlay","videoOption","startTime","url","old","setVideoOption","Date","now","time","dateTime","prev","Number","changeInterval","num","interval","setInterval","setVideoOptionTime","clearInterval","_onChange","event","PlayerState","PLAYING","done","target","getCurrentTime","setVideoOptionDone","btnBack","setVideoOptionOld","HOME","btnGif","GIF","VideoPageWrapper","btn","play","player","split"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport classes from './index.module.scss';\nimport YouTube, { Options } from 'react-youtube';\nimport Context from '../../contex/indext';\nimport { useNavigate } from 'react-router-dom';\nimport { RouteNames } from '../../routes';\n\nconst opts: Options = {\n  height: '390',\n  width: '640',\n  playerVars: {\n    autoplay: 1,\n    iv_load_policy: 3,\n    start: 1\n  }\n};\n\nconst VideoPage = (): React.ReactElement => {\n  const data = useContext(Context);\n  const [options, setOptions] = useState(opts);\n  const [intervalL, setIntervalL] = useState<any>(null);\n  const navigate = useNavigate();\n  const _onReady = (_event: any): void => {\n    data.video.setVideoOptionPlay(true);\n    if (!data.video?.videoOption?.startTime || data.video?.videoOption?.url !== data.video?.videoOption?.old) {\n      data.video.setVideoOption('startTime', Date.now());\n    }\n    if (data.video?.videoOption?.url === data.video?.videoOption?.old && data.video?.videoOption?.time) {\n      const dateTime: number = ((Date.now() - data.video?.videoOption?.startTime) / 1000) || 0;\n      // if (data.video?.videoOption?.time > dateTime) {\n      //   dateTime += data.video?.videoOption?.time;\n      // }\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      setOptions((prev: any) => ({\n        ...prev,\n        playerVars: {\n          ...prev?.playerVars,\n          start: dateTime || Number(data.video?.videoOption?.time) || opts.playerVars.start\n        }\n      }));\n    }\n  };\n  const changeInterval = (num: number) => {\n    const interval = setInterval(() => {\n      data.video.setVideoOptionTime(num);\n    }, 2000);\n    if (intervalL) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      clearInterval(intervalL);\n    }\n    setIntervalL(interval);\n  };\n  const _onChange = (event: any): void => {\n    if (event.data === YouTube.PlayerState.PLAYING && !data.video?.videoOption.done) {\n      changeInterval(Number(event.target.getCurrentTime()));\n      data.video.setVideoOptionDone(false);\n    } else if (intervalL) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      clearInterval(intervalL);\n    }\n\n    data.video.setVideoOptionPlay(event.data === YouTube.PlayerState.PLAYING);\n    data.video.setVideoOptionTime(event.target.getCurrentTime());\n  };\n  const btnBack = () => {\n    data.video.setVideoOptionOld(data.video?.videoOption?.url);\n    navigate(RouteNames.HOME);\n  };\n  const btnGif = () => {\n    data.video.setVideoOptionOld(data.video?.videoOption?.url);\n    navigate(RouteNames.GIF);\n  };\n\n  return <div className={classes.VideoPageWrapper}>\n    <div className={classes.options}>\n      <button\n        className={`${classes.btn} ${classes.btnBack}`}\n        disabled={data.video?.videoOption?.play}\n        onClick={btnBack}>Edit</button>\n      <button\n        className={classes.btn}\n        onClick={btnGif}>GIF</button>\n    </div>\n    <div className={classes.player}>\n      <YouTube\n        videoId={`${data.video?.videoOption?.url?.split('v=')[1]?.split('&')[0]}`}\n        opts={options}\n        onReady={_onReady}\n        onStateChange={_onChange}\n        onPlaybackQualityChange={_onChange}\n      />\n    </div>\n  </div>;\n};\n\nexport default VideoPage;\n"]},"metadata":{},"sourceType":"module"}