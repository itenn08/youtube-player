{"ast":null,"code":"var _jsxFileName = \"/home/dev/projects/youtube-test/youtube-player/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Router from './routes/Router';\nimport classes from './App.module.scss';\nimport Context from './contex/indext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [videoOption, setVideoOption] = useState({\n    url: '',\n    play: false,\n    time: null,\n    done: false,\n    old: ''\n  });\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      video: {\n        videoOption,\n        setVideoOptionUrl: url => setVideoOption(prev => ({ ...prev,\n          url: `${url}`\n        })),\n        setVideoOptionTime: time => setVideoOption(prev => ({ ...prev,\n          time\n        })),\n        setVideoOptionPlay: play => setVideoOption(prev => ({ ...prev,\n          play\n        })),\n        setVideoOptionDone: done => setVideoOption(prev => ({ ...prev,\n          done\n        })),\n        setVideoOptionOld: old => setVideoOption(prev => ({ ...prev,\n          old\n        })),\n        setVideoOption: (name, value) => setVideoOption(prev => ({ ...prev,\n          [name]: value\n        }))\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.AppWrapper,\n      children: /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"46bK1ndeEO2HmWrh0hIrLy+aLXM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dev/projects/youtube-test/youtube-player/src/App.tsx"],"names":["React","useState","Router","classes","Context","App","videoOption","setVideoOption","url","play","time","done","old","video","setVideoOptionUrl","prev","setVideoOptionTime","setVideoOptionPlay","setVideoOptionDone","setVideoOptionOld","name","value","AppWrapper"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAA0B;AAAA;;AACpC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC;AAAEO,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,IAAI,EAAE,KAAjB;AAAwBC,IAAAA,IAAI,EAAE,IAA9B;AAAoCC,IAAAA,IAAI,EAAE,KAA1C;AAAiDC,IAAAA,GAAG,EAAE;AAAtD,GAAD,CAA9C;AAEA,sBACE,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AACvBC,MAAAA,KAAK,EAAE;AACLP,QAAAA,WADK;AAELQ,QAAAA,iBAAiB,EAAGN,GAAD,IAAiBD,cAAc,CAACQ,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWP,UAAAA,GAAG,EAAG,GAAEA,GAAI;AAAvB,SAAL,CAAL,CAF7C;AAGLQ,QAAAA,kBAAkB,EAAGN,IAAD,IAAyBH,cAAc,CAACQ,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWL,UAAAA;AAAX,SAAL,CAAL,CAHtD;AAILO,QAAAA,kBAAkB,EAAGR,IAAD,IAAmBF,cAAc,CAACQ,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWN,UAAAA;AAAX,SAAL,CAAL,CAJhD;AAKLS,QAAAA,kBAAkB,EAAGP,IAAD,IAAmBJ,cAAc,CAACQ,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWJ,UAAAA;AAAX,SAAL,CAAL,CALhD;AAMLQ,QAAAA,iBAAiB,EAAGP,GAAD,IAAiBL,cAAc,CAACQ,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWH,UAAAA;AAAX,SAAL,CAAL,CAN7C;AAOLL,QAAAA,cAAc,EAAE,CAACa,IAAD,EAAeC,KAAf,KAA8Bd,cAAc,CAACQ,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAW,WAACK,IAAD,GAAQC;AAAnB,SAAL,CAAL;AAPvD;AADgB,KAAzB;AAAA,2BAWE;AAAK,MAAA,SAAS,EAAElB,OAAO,CAACmB,UAAxB;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CApBD;;GAAMjB,G;;KAAAA,G;AAsBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Router from './routes/Router';\nimport classes from './App.module.scss';\nimport Context from './contex/indext';\n\nconst App = (): React.ReactElement => {\n  const [videoOption, setVideoOption] = useState({ url: '', play: false, time: null, done: false, old: '' });\n\n  return (\n    <Context.Provider value={{\n      video: {\n        videoOption,\n        setVideoOptionUrl: (url: string) => setVideoOption(prev => ({ ...prev, url: `${url}` })),\n        setVideoOptionTime: (time: number | null) => setVideoOption(prev => ({ ...prev, time })),\n        setVideoOptionPlay: (play: boolean) => setVideoOption(prev => ({ ...prev, play })),\n        setVideoOptionDone: (done: boolean) => setVideoOption(prev => ({ ...prev, done })),\n        setVideoOptionOld: (old: string) => setVideoOption(prev => ({ ...prev, old })),\n        setVideoOption: (name: string, value: any) => setVideoOption(prev => ({ ...prev, [name]: value }))\n      }\n    }}>\n      <div className={classes.AppWrapper}>\n        <Router />\n      </div>\n    </Context.Provider >\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}